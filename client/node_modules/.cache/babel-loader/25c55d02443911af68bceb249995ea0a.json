{"ast":null,"code":"var _jsxFileName = \"/Users/annacai/Desktop/scriptai/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Form, TextArea, Button, Container } from 'semantic-ui-react';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputText, setInputText] = useState('');\n  const [inputLength, setInputLength] = useState('');\n  const [inputTheme, setInputTheme] = useState('');\n  const [resultText, setResultText] = useState('');\n  const prompt1 = `Keywords: ${inputText}\\nWrite a harmless synopsis for a ${inputLength} long ${inputTheme} film that includes all of the keywords.\\nSynopsis:`;\n  const prompt2 = `Keywords: ${inputText}\\n\n\n                  Write a short excerpt from an interesting film with a plot that incorporates all of the keywords. Present the excerpt in proper script format.\\n\n  \n                  Excerpt:`;\n\n  const {\n    Configuration,\n    OpenAIApi\n  } = require(\"openai\");\n\n  const configuration = new Configuration({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const getOpenAIResponse = () => {\n    openai.createCompletion({\n      model: \"text-davinci-002\",\n      prompt: prompt,\n      max_tokens: 256,\n      temperature: 0.7\n    }).then(res => {\n      console.log(res);\n      console.log('stop');\n      setResultText(res.data.choices[0].text.replace(/\\n/g, ''));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container\",\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Movie Synopsis Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-body\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"List any number of keywords you want in your synopsis. Ex: man, woman, dog, McDonald's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          control: TextArea,\n          placeholder: \"Enter keywords for your synopsis...\",\n          onChange: e => setInputText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Choose length of film.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setInputLength(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"10 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"30 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"1 hour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"2 hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Choose genre of film.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setInputTheme(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Drama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Comedy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Science fiction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Adventure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          onClick: getOpenAIResponse,\n          children: \"Make a synopsis!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          onClick: getOpenAIResponse,\n          children: \"Make an excerpt!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Synopsis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          readOnly: \"readonly\",\n          value: resultText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Vmg7PKmDOHThROqueEq212qu6O8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Form","TextArea","Button","Container","React","useState","App","inputText","setInputText","inputLength","setInputLength","inputTheme","setInputTheme","resultText","setResultText","prompt1","prompt2","Configuration","OpenAIApi","require","configuration","apiKey","process","env","REACT_APP_OPENAI_API_KEY","openai","getOpenAIResponse","createCompletion","model","prompt","max_tokens","temperature","then","res","console","log","data","choices","text","replace","catch","err","e","target","value"],"sources":["/Users/annacai/Desktop/scriptai/src/App.js"],"sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Form, TextArea, Button, Container } from 'semantic-ui-react';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [inputLength, setInputLength] = useState('');\n  const [inputTheme, setInputTheme] = useState('');\n  const [resultText, setResultText] = useState('');\n  const prompt1 = `Keywords: ${inputText}\\nWrite a harmless synopsis for a ${inputLength} long ${inputTheme} film that includes all of the keywords.\\nSynopsis:`\n  const prompt2 = `Keywords: ${inputText}\\n\n\n                  Write a short excerpt from an interesting film with a plot that incorporates all of the keywords. Present the excerpt in proper script format.\\n\n  \n                  Excerpt:`\n\n  const { Configuration, OpenAIApi } = require(\"openai\");\n  const configuration = new Configuration({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const getOpenAIResponse = () => {\n    openai.createCompletion({\n      model: \"text-davinci-002\",\n      prompt: prompt,\n      max_tokens: 256,\n      temperature: 0.7,\n    }).then((res) => {\n      console.log(res);\n      console.log('stop')\n      setResultText(res.data.choices[0].text.replace(/\\n/g, ''));\n    }).catch((err) => {\n      console.log(err);\n    });\n  };\n\n  return (\n    <Container className='container' textAlign='center'>\n      <div className=\"app-header\">\n        <h2 className=\"header\">Movie Synopsis Generator</h2>\n      </div>\n      <div className='app-body'>\n            <Form>\n              <h3>List any number of keywords you want in your synopsis. Ex: man, woman, dog, McDonald's</h3>\n                <Form.Field control={TextArea} placeholder=\"Enter keywords for your synopsis...\" onChange={(e) => setInputText(e.target.value)}/>\n\n                <h3>Choose length of film.</h3>\n                <select onChange={(e) => setInputLength(e.target.value)}>\n                    <option>10 minutes</option>\n                    <option>30 minutes</option>\n                    <option>1 hour</option>\n                    <option>2 hours</option>\n                </select>\n\n                <h3>Choose genre of film.</h3>\n                <select onChange={(e) => setInputTheme(e.target.value)}>\n                    <option>Drama</option>\n                    <option>Comedy</option>\n                    <option>Action</option>\n                    <option>Science fiction</option>\n                    <option>Adventure</option>\n                </select>\n\n                <Button size='large' onClick={getOpenAIResponse}>\n                  Make a synopsis!\n                </Button>\n\n                <Button size='large' onClick={getOpenAIResponse}>\n                  Make an excerpt!\n                </Button>\n\n\n                <h2>Synopsis:</h2>\n                <textarea\n                    readOnly='readonly'\n                    value={resultText}\n                />\n            </Form>\n        </div>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}