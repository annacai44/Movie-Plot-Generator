{"ast":null,"code":"var _jsxFileName = \"/Users/annacai/Desktop/scriptai/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Form, TextArea, Button, Container, Loader } from 'semantic-ui-react';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputText, setInputText] = useState('');\n  const [inputLength, setInputLength] = useState('');\n  const [inputTheme, setInputTheme] = useState('');\n  const [resultText, setResultText] = useState('');\n  const [isSynopsis, setIsSynopsis] = useState(true);\n  const [sliderValue, setSliderValue] = useState('0.5');\n  const isMounted = useRef(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const prompt1 = `Keywords: ${inputText}\\nWrite a harmless synopsis for an interesting ${inputLength} long ${inputTheme} film that includes all of the keywords.\\nSynopsis:\\n`;\n  const prompt2 = `Keywords: ${inputText}\\nWrite a short excerpt from an interesting ${inputLength} long ${inputTheme} film with a plot that incorporates all of the keywords. Present the excerpt in proper script format.\\nExcerpt:\\n`;\n\n  const getOpenAIResponse = () => {\n    setIsLoading(true);\n    axios.get('http://localhost:8000', {\n      params: {\n        model: \"text-davinci-002\",\n        prompt: `${isSynopsis ? prompt1 : prompt2}`,\n        max_tokens: 256,\n        sliderValue: sliderValue\n      }\n    }).then(res => {\n      {\n        isSynopsis ? setResultText(res.data.replace(/\\n/g, '')) : setResultText(res.data);\n      }\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    if (isMounted.current) {\n      console.log(\"this is useEffect:\", isSynopsis);\n      getOpenAIResponse();\n    } else {\n      isMounted.current = true;\n    }\n  }, [isSynopsis]);\n\n  const setMode = e => {\n    if (e.target.value === 'synopsis') {\n      setIsSynopsis(true);\n      if (isSynopsis) getOpenAIResponse();\n    } else {\n      setIsSynopsis(false);\n      if (!isSynopsis) getOpenAIResponse();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container\",\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Movie Plot Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-body\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"List any number of keywords you want in your film synopsis or script excerpt. Ex: man, woman, dog, McDonald's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          control: TextArea,\n          placeholder: \"Enter keywords for your synopsis...\",\n          onChange: e => setInputText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Choose length of film.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setInputLength(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"10 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"30 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"1 hour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"2 hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Choose genre of film.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setInputTheme(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Drama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Comedy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Science fiction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Adventure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Choose whether you want your story to be more predictable or more random.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slidecontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"More Predictable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"slider\",\n            onChange: e => setSliderValue(e.currentTarget.value),\n            type: \"range\",\n            min: \"0\",\n            max: \"1.0\",\n            step: \"0.01\",\n            value: sliderValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"More Random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          value: \"synopsis\",\n          onClick: setMode,\n          children: \"Make a synopsis!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          value: \"excerpt\",\n          onClick: setMode,\n          children: \"Make an excerpt!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isSynopsis ? 'Synopsis:' : 'Excerpt:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n          active: true,\n          inline: \"centered\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n          readOnly: \"readonly\",\n          value: resultText,\n          rows: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Responses generated by GPT-3!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pZwbuLTA1UJeAf89HZnZmpbPqHI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Form","TextArea","Button","Container","Loader","React","useState","useEffect","useRef","axios","App","inputText","setInputText","inputLength","setInputLength","inputTheme","setInputTheme","resultText","setResultText","isSynopsis","setIsSynopsis","sliderValue","setSliderValue","isMounted","isLoading","setIsLoading","prompt1","prompt2","getOpenAIResponse","get","params","model","prompt","max_tokens","then","res","data","replace","catch","err","console","log","current","setMode","e","target","value","currentTarget"],"sources":["/Users/annacai/Desktop/scriptai/src/App.js"],"sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Form, TextArea, Button, Container, Loader} from 'semantic-ui-react';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [inputLength, setInputLength] = useState('');\n  const [inputTheme, setInputTheme] = useState('');\n  const [resultText, setResultText] = useState('');\n  const [isSynopsis, setIsSynopsis] = useState(true);\n  const [sliderValue, setSliderValue] = useState('0.5');\n  const isMounted = useRef(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const prompt1 = `Keywords: ${inputText}\\nWrite a harmless synopsis for an interesting ${inputLength} long ${inputTheme} film that includes all of the keywords.\\nSynopsis:\\n`\n  const prompt2 = `Keywords: ${inputText}\\nWrite a short excerpt from an interesting ${inputLength} long ${inputTheme} film with a plot that incorporates all of the keywords. Present the excerpt in proper script format.\\nExcerpt:\\n`\n\n  const getOpenAIResponse = () => {\n    setIsLoading(true);\n    axios.get('http://localhost:8000', {\n      params: {\n        model: \"text-davinci-002\",\n        prompt: `${isSynopsis ? prompt1 : prompt2}`,\n        max_tokens: 256,\n        sliderValue: sliderValue\n      }\n    })\n    .then((res) => {\n      {isSynopsis ? setResultText(res.data.replace(/\\n/g, '')) : setResultText(res.data)}\n      setIsLoading(false);\n    }).catch((err) => {\n      console.log(err);\n    })\n  }\n\n  useEffect(() => {\n    if (isMounted.current) {\n      console.log(\"this is useEffect:\", isSynopsis);\n      getOpenAIResponse();\n    } else {\n      isMounted.current = true;\n    }\n  }, [isSynopsis])\n\n  const setMode = (e) => {\n    if (e.target.value === 'synopsis') {\n      setIsSynopsis(true);\n      if (isSynopsis) getOpenAIResponse();\n    } else {\n      setIsSynopsis(false);\n      if (!isSynopsis) getOpenAIResponse();\n    }\n  }\n\n  return (\n    <Container className='container' textAlign='center'>\n      <div className=\"app-header\">\n        <h2 className=\"header\">Movie Plot Generator</h2>\n      </div>\n      <div className='app-body'>\n            <Form>\n              <h3>List any number of keywords you want in your film synopsis or script excerpt. Ex: man, woman, dog, McDonald's</h3>\n                <Form.Field control={TextArea} placeholder=\"Enter keywords for your synopsis...\" onChange={(e) => setInputText(e.target.value)}/>\n\n                <h3>Choose length of film.</h3>\n                <select onChange={(e) => setInputLength(e.target.value)}>\n                    <option>10 minutes</option>\n                    <option>30 minutes</option>\n                    <option>1 hour</option>\n                    <option>2 hours</option>\n                </select>\n\n                <h3>Choose genre of film.</h3>\n                <select onChange={(e) => setInputTheme(e.target.value)}>\n                    <option>Drama</option>\n                    <option>Comedy</option>\n                    <option>Action</option>\n                    <option>Science fiction</option>\n                    <option>Adventure</option>\n                </select>\n\n                <h3>Choose whether you want your story to be more predictable or more random.</h3>\n                <div className=\"slidecontainer\">\n                  <span>More Predictable</span>\n                  <input className=\"slider\" onChange={(e) => setSliderValue(e.currentTarget.value)} type=\"range\" min=\"0\" max=\"1.0\" step='0.01' value={sliderValue}/>\n                  <span>More Random</span>\n                </div>\n\n                <Button size='large' value='synopsis' onClick={setMode}>\n                  Make a synopsis!\n                </Button>\n\n                <Button size='large' value='excerpt' onClick={setMode}>\n                  Make an excerpt!\n                </Button>\n\n                <h2>{isSynopsis ? 'Synopsis:' : 'Excerpt:'}</h2>\n\n                {isLoading ? (\n                  <Loader active inline='centered'>Loading</Loader>\n                ) : (\n                  <textarea readOnly='readonly' value={resultText} rows='25'/>\n                )}\n            </Form>\n        </div>\n        <Container>\n          <div>\n            Responses generated by GPT-3!\n          </div>\n        </Container>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}